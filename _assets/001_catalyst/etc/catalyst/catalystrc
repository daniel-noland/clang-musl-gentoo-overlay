#!/bin/bash
# Building packages in docker means the build is already sandboxed anyway and the second order sandbox attempt usually
# fails extraneously.
FEATURES="${FEATURES} -ipc-sandbox"
FEATURES="${FEATURES} -network-sandbox"
FEATURES="${FEATURES} -pid-sandbox"
FEATURES="${FEATURES} -sandbox"
FEATURES="${FEATURES} -usersandbox"

# We don't need to spend time building and running tests.
# Tests often extraneously fail in unprivileged container builds anyway.
FEATURES="${FEATURES} -test"

export FEATURES

export myGCC="sys-devel/clang"
export myBINUTILS="sys-devel/llvm"
export myEXTRA="dev-lang/perl sys-devel/lld sys-libs/compiler-rt sys-devel/clang-runtime sys-libs/libcxx sys-libs/libcxxabi sys-libs/llvm-libunwind sys-devel/llvm-common sys-devel/clang-common"

export PATH="/usr/lib/llvm/14/bin:$PATH"

export ADDR2LINE="llvm-addr2line"
export AR="llvm-ar"
export AS="llvm-as"
export CC="clang"
export CXX="clang++"
export LD="ld.lld"
export NM="llvm-nm"
export OBJCOPY="llvm-objcopy"
export OBJDUMP="llvm-objdump"
export RANLIB="llvm-ranlib"
export READELF="llvm-readelf"
export STRINGS="llvm-strings"
export STRIP="llvm-strip"

export CFLAGS="-fPIC -fstack-protector-strong -D_FORTIFY_SOURCE=2 -O3 -march=native -pipe -flto=thin"
export CXXFLAGS="${CFLAGS}"

LDFLAGS="${LDFLAGS} -Wl,-O1"
LDFLAGS="${LDFLAGS} -Wl,--as-needed"
LDFLAGS="${LDFLAGS} -Wl,-z,relro,-z,now"
LDFLAGS="${LDFLAGS} -pie"
LDFLAGS="${LDFLAGS} -fuse-ld=lld"
LDFLAGS="${LDFLAGS} -unwindlib=libunwind"

export LDFLAGS