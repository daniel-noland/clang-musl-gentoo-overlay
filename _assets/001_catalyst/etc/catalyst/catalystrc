#!/bin/bash

_MINIMIZE="${_MINIMIZE} -X"
_MINIMIZE="${_MINIMIZE} -accessibility"
_MINIMIZE="${_MINIMIZE} -bash-completion"
_MINIMIZE="${_MINIMIZE} -berkdb"
_MINIMIZE="${_MINIMIZE} -bluetooth"
_MINIMIZE="${_MINIMIZE} -branding"
_MINIMIZE="${_MINIMIZE} -doc"
_MINIMIZE="${_MINIMIZE} -examples"
_MINIMIZE="${_MINIMIZE} -fortran"
_MINIMIZE="${_MINIMIZE} -gdbm"
_MINIMIZE="${_MINIMIZE} -gnome"
_MINIMIZE="${_MINIMIZE} -gold"
_MINIMIZE="${_MINIMIZE} -gtk"
_MINIMIZE="${_MINIMIZE} -gtk-doc"
_MINIMIZE="${_MINIMIZE} -gtk2"
_MINIMIZE="${_MINIMIZE} -gtk3"
_MINIMIZE="${_MINIMIZE} -iso"
_MINIMIZE="${_MINIMIZE} -java"
_MINIMIZE="${_MINIMIZE} -kde"
_MINIMIZE="${_MINIMIZE} -latex"
_MINIMIZE="${_MINIMIZE} -man"
_MINIMIZE="${_MINIMIZE} -ncurses"
_MINIMIZE="${_MINIMIZE} -perl"
_MINIMIZE="${_MINIMIZE} -plasma"
_MINIMIZE="${_MINIMIZE} -qt5"
_MINIMIZE="${_MINIMIZE} -ruby"
_MINIMIZE="${_MINIMIZE} -systemd"
_MINIMIZE="${_MINIMIZE} -test"
_MINIMIZE="${_MINIMIZE} -tk"
_MINIMIZE="${_MINIMIZE} -wxwidgets"

export ABI_X86="64"
_MINIMIZE="${_MINIMIZE} -abi_x86_32"
_MINIMIZE="${_MINIMIZE} -abi_x86_x32"
_MINIMIZE="${_MINIMIZE} abi_x86_64"

export LLVM_TARGETS="X86"
_MINIMIZE="${_MINIMIZE} -llvm_targets_AArch64"
_MINIMIZE="${_MINIMIZE} -llvm_targets_AMDGPU"
_MINIMIZE="${_MINIMIZE} -llvm_targets_ARM"
_MINIMIZE="${_MINIMIZE} -llvm_targets_AVR"
_MINIMIZE="${_MINIMIZE} -llvm_targets_BPF"
_MINIMIZE="${_MINIMIZE} -llvm_targets_Hexagon"
_MINIMIZE="${_MINIMIZE} -llvm_targets_Lanai"
_MINIMIZE="${_MINIMIZE} -llvm_targets_MSP430"
_MINIMIZE="${_MINIMIZE} -llvm_targets_Mips"
_MINIMIZE="${_MINIMIZE} -llvm_targets_NVPTX"
_MINIMIZE="${_MINIMIZE} -llvm_targets_PowerPC"
_MINIMIZE="${_MINIMIZE} -llvm_targets_RISCV"
_MINIMIZE="${_MINIMIZE} -llvm_targets_Sparc"
_MINIMIZE="${_MINIMIZE} -llvm_targets_SystemZ"
_MINIMIZE="${_MINIMIZE} -llvm_targets_VE"
_MINIMIZE="${_MINIMIZE} -llvm_targets_WebAssembly"
_MINIMIZE="${_MINIMIZE} -llvm_targets_XCore"

_USE_SET="${_MINIMIZE}"

# Enable xml for python in stage 2
_USE_SET="${_USE_SET} xml"

# Enable static-libs for openmp in stage 3 (no, I don't seem to be able to turn off openmp without breaking the build)
_USE_SET="${_USE_SET} static-libs"

export BOOTSTRAP_USE="${BOOTSTRAP_USE} ${_USE_SET}"
export CATALYST_USE="${CATALYST_USE} ${_USE_SET}"
export USE="${USE} ${_USE_SET}"

export ADDR2LINE="llvm-addr2line"
export AR="llvm-ar"
export AS="llvm-as"
export CC="clang"
export CXX="clang++"
export LD="ld.lld"
export NM="llvm-nm"
export OBJCOPY="llvm-objcopy"
export OBJDUMP="llvm-objdump"
export RANLIB="llvm-ranlib"
export READELF="llvm-readelf"
export STRINGS="llvm-strings"
export STRIP="llvm-strip"

_HARDENING_FLAGS="-fPIC -fstack-protector-strong -D_FORTIFY_SOURCE=2"
_OPTIMIZE_FLAGS="-O3 -march=native -flto=thin"
_EXTRA_BUILD_FLAGS="${_HARDENING_FLAGS} ${_OPTIMIZE_FLAGS}"

export CFLAGS="${CFLAGS} ${_EXTRA_BUILD_FLAGS}"
export CXXFLAGS="${CXXFLAGS} ${_EXTRA_BUILD_FLAGS}"
export FCFLAGS="${FCFLAGS} ${_EXTRA_BUILD_FLAGS}"
export FFLAGS="${FFLAGS} ${_EXTRA_BUILD_FLAGS}"

LDFLAGS="${LDFLAGS} -Wl,-O2"
LDFLAGS="${LDFLAGS} -Wl,--as-needed"
LDFLAGS="${LDFLAGS} -Wl,-z,relro,-z,now"
LDFLAGS="${LDFLAGS} -pie"
LDFLAGS="${LDFLAGS} -fuse-ld=lld"
LDFLAGS="${LDFLAGS} -unwindlib=libunwind"

export LDFLAGS